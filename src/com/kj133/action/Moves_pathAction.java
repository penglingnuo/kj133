/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.kj133.action;

import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.action.DynaActionForm;
import org.apache.struts.actions.DispatchAction;
import org.apache.log4j.Logger;
import org.speedframework.entity.Pagination;

import com.kj133.entity.Ouser;
import com.kj133.entity.Search_ShuaKa;
import com.kj133.entity.bo.DownWellBO;
import com.kj133.entity.bo.WordlibBO;
/** 
 * MyEclipse Struts
 * Creation date: 04-10-2008
 * 
 * XDoclet definition:
 * @struts.action parameter="method" validate="true"
 */
public class Moves_pathAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping 初始化移动轨迹OCX控件
	 * @param form
	 * @param request
	 * @param response  
	 * @return ActionForward
	 */
	private Logger log=Logger.getLogger(this.getClass());
	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		    try{
		    	 String con=request.getSession().getAttribute("con").toString();
		    	 Ouser user = (Ouser) request.getSession().getAttribute("user");
		    	 request.setAttribute("strCon", con);
		    	 request.setAttribute("userId", user.getUserid());
		    }catch(Exception e){
		    	log.error("==初始化移动轨迹查询错误=="+e);
		    	e.printStackTrace();
		    }
		    return mapping.findForward("moves_path");
	}
	
    /***
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return   初始化员工下井
     */
    public ActionForward moves_path_downWell(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
	        DynaActionForm dy=(DynaActionForm)form;
		    WordlibBO lib=new WordlibBO();
			  try{
				  Search_ShuaKa shuak=(Search_ShuaKa)dy.getMap().get("ser_shuaka");
				   SimpleDateFormat format =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
				   Calendar cal=Calendar.getInstance();//获取当前时间
				   cal.add(Calendar.DATE, +1); 
				   Date date = new Date();
				   String stime=format.format(cal.getTime());
			       String etime=format.format(date); 

			       shuak.setStime(etime);
				   shuak.setEtime(stime);
				   shuak.setMintime("15:47:51");
				   shuak.setMaxtime("15:47:51");
				   shuak.setDstime("15:47:51");
				   shuak.setDetime("15:47:51");
				   shuak.setUstime("15:47:51");
				   shuak.setUetime("15:47:51");
				   shuak.setKsdate(etime);
				   shuak.setKedate(stime);
				   Ouser user=(Ouser)request.getSession().getAttribute("user");
				   List gro=lib.grolist(user.getUserid()); 
				   List type=lib.workType();
				   List ban=lib.banName();
				   request.setAttribute("gro_list",gro);
				   request.setAttribute("workType_list",type);
				   request.setAttribute("ban_list", ban);
				   request.setAttribute("listCount", "0");
				   dy.set("ser_shuaka",shuak);
				 
				}catch(Exception e){
					e.printStackTrace();
				}
			    return mapping.findForward("init");
    }
    
    /***
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return   员工下井结果集
     */
    public ActionForward moves_path_Result(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
    	    DynaActionForm dy=(DynaActionForm)form;
    	    Pagination pagination = new Pagination();
    	    String page =(String)request.getParameter("page");//获取页号
    		SimpleDateFormat format =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    		   Calendar cal=Calendar.getInstance();//获取当前时间
    		   cal.add(Calendar.DATE, +1); 
    		   Date date = new Date();
    		   String stime=format.format(cal.getTime());
    	       String etime=format.format(date); 
            DownWellBO bo=new DownWellBO();
            WordlibBO lib=new WordlibBO();
    	    try{
    	    	Search_ShuaKa  downwell=(Search_ShuaKa)dy.getMap().get("ser_shuaka");
	        	 pagination.setCount(200); 
			     if (page != null && page.length() > 0) {
			        pagination.setPage(Integer.parseInt(page));
			      }else {
			        pagination.setPage(1);
			      }
			     
	        	 List list=bo.init(downwell,pagination);
	        	 
	        	 request.setAttribute("listCount", list.size());
	        	 List relist=bo.initPrint(downwell);
	        	 if( list.size()== 0){
	        		   ActionMessages messages=new ActionMessages();
				       messages.add(ActionMessages.GLOBAL_MESSAGE,new ActionMessage("no.count"));
				       this.saveMessages(request,messages);
	        	 }else{
	        		 request.setAttribute("downWell_list",list);
	        	 }
	        	 request.getSession().setAttribute("downwell", downwell);//结果集
	        	 request.getSession().setAttribute("downWellPrint", relist);//结果集
	        	 Ouser user=(Ouser)request.getSession().getAttribute("user");
	        	 List gro=lib.grolist(user.getUserid()); 
				 List type=lib.workType();
				 List ban=lib.banName();
				 
				 if(downwell.getMintime()==null){
					 downwell.setMintime("15:47:51");
	        	 }else{
	        		 downwell.setMintime(downwell.getMintime());
	        		 request.setAttribute("name7", "true");
	        	 }if(downwell.getMaxtime()==null){
	        		 downwell.setMaxtime("15:47:51");
	        	 }else{
	        		 downwell.setMaxtime(downwell.getMaxtime());
	        		 request.setAttribute("name8", "true");
	        	 }if(downwell.getStime()==null){
	        		 downwell.setStime(etime);
	        	 }else{
	        		 downwell.setStime(downwell.getStime());
	        		 request.setAttribute("name9", "true");
	        	 }if(downwell.getEtime()==null){
	        		 downwell.setEtime(stime);
	        	 }else{
	        		 downwell.setEtime(downwell.getEtime());
	        		 request.setAttribute("name10", "true");
	        	 }if(downwell.getDstime()==null){
	        		 downwell.setDstime("15:47:51");
	        	 }else{
	        		 downwell.setDstime(downwell.getDstime());
	        		 request.setAttribute("name1", "true");
	        	 }if(downwell.getDetime()==null){
	        		 downwell.setDetime("15:47:51");
	        	 }else{
	        		 downwell.setDetime(downwell.getDetime());
	        		 request.setAttribute("name3", "true");
	        	 }if(downwell.getUstime()==null){
	        		 downwell.setUstime("15:47:51");
	        	 }else{
	        		 downwell.setUstime(downwell.getUstime());
	        		 request.setAttribute("name2", "true");
	        	 }if(downwell.getUetime()==null){
	        		 downwell.setUetime("15:47:51");
	        	 }else{
	        		 downwell.setUetime(downwell.getUetime());
	        		 request.setAttribute("name4", "true");
	        	 }if(downwell.getKsdate()==null){
	        		 downwell.setKsdate(etime);
	        	 }else{
	        		 downwell.setKsdate(downwell.getKsdate());
	        		 request.setAttribute("name6", "true");
	        	 }if(downwell.getKedate()==null){
	        		 downwell.setKedate(stime);
	        	 }else{
	        		 downwell.setKedate(downwell.getKedate());
	        		 request.setAttribute("name5", "true");
	        	 }
				 request.setAttribute("gro_list",gro);
				 request.setAttribute("workType_list",type);
	        	 request.setAttribute("pagination", pagination);
	        	 request.setAttribute("ban_list", ban);
	        	 dy.set("ser_shuaka",downwell);
    	        }catch(Exception e){
    	        	 e.printStackTrace();
    	        }
    	    return mapping.findForward("init");
    }
    /***
     * 
     * @param mapping
     * @param form
     * @param request
     * @param response
     * @return  获取时间返回主界面
     */
    public ActionForward moves_path_Choise(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response){
    	    try{
    	    	  String con=request.getSession().getAttribute("con").toString();
		    	  Ouser user = (Ouser) request.getSession().getAttribute("user");
		    	  request.setAttribute("strCon", con);
		    	  request.setAttribute("userId", user.getUserid());
		    	 
    	    	  String cid=request.getParameter("cid");
    	    	  request.setAttribute("cid", cid);//卡号
    	    	  String stime=request.getParameter("stime");
    	    	  request.setAttribute("stime", stime);//开始时间
    	    	  String etime=request.getParameter("etime");
    	    	  request.setAttribute("etime", etime);//结束时间
    	    	 
    	    }catch(Exception e){
    	    	e.printStackTrace();
    	    }
    	    return mapping.findForward("result");
    }
}