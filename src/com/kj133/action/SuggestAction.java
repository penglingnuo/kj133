/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.kj133.action;

import java.io.PrintWriter;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.kj133.entity.vo.SuggestEmployeeVO;
import com.kj133.util.Global;

/** 
 * MyEclipse Struts
 * Creation date: 02-21-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class SuggestAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private final Logger  log=Logger.getLogger(this.getClass());
	/** 
	 * Method execute
	 * @param mapping  
	 * @param form
	 * @param request 
	 * @param response
	 * @return ActionForward 把Suggest提示做成一个单独的类
	 */
	public ActionForward nothing(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		return null;
	}
	
	   
      /**
       * 
       * @param mapping
       * @param form
       * @param request
       * @param response
       * @return 显示卡号和姓名
       */
	    @SuppressWarnings("unchecked")
		public ActionForward suggestName(ActionMapping mapping, ActionForm form,
			   HttpServletRequest request, HttpServletResponse response) {
	    	   Global  gobal=new Global(); 
		    	try{
		    		 String name=request.getParameter("name");
		    	     //byte[] by=name.getBytes("ISO8859-1"); //转换成中文
		    	    // String  temp=new  String(by,"gb2312");
		    	    // System.out.println(temp);
		    		 List list=gobal.SuggestEmployee(name);
		    			    		
		    		 response.setContentType("text/xml");
			    	 PrintWriter out=response.getWriter();
			    	 out.print(parasToXmlName(list));	 
		    	}catch(Exception e){
		    		log.error("==显示卡号和姓名==",e);
		    	}
			    return null;
		}
	    
	    // div显示的时候是卡号和姓名
	    public String parasToXmlName(List list){
			StringBuffer sb=new StringBuffer();
			sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>");
			sb.append("<sutdents>");
			for(int i=0;i<list.size();i++){
				 SuggestEmployeeVO vo=(SuggestEmployeeVO)list.get(i);
			     sb.append("<student>");
			     sb.append("<cardname>"+vo.getCardid()+'_'+vo.getUsername()+"</cardname>");
			     sb.append("</student>");
			}
			sb.append("</sutdents>");
			return sb.toString();
		}	
	    
	  //-------------------------------------add--------------------------------------------------------------------
	    @SuppressWarnings("unchecked")
		public ActionForward suggestName1(ActionMapping mapping, ActionForm form,
			   HttpServletRequest request, HttpServletResponse response) {
	    	   Global  gobal=new Global(); 
		    	try{
		    		 String name=request.getParameter("name");
		    		 List list=gobal.SuggestEmployee(name);
		    			    		
		    		 response.setContentType("text/xml");
			    	 PrintWriter out=response.getWriter();
			    	 out.print(parasToXmlName1(list));	 
		    	}catch(Exception e){
		    		log.error("==显示卡号和姓名==",e);
		    	}
			    return null;
		}
	    
	    // div显示的时候是卡号和姓名
	    public String parasToXmlName1(List list){
			StringBuffer sb=new StringBuffer();
			sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>");
			sb.append("<sutdents>");
			for(int i=0;i<list.size();i++){
				 SuggestEmployeeVO vo=(SuggestEmployeeVO)list.get(i);
			     sb.append("<student>");
			     sb.append("<cardname>"+vo.getStafferid()+'_'+vo.getUsername()+"</cardname>");
			     sb.append("</student>");
			}
			sb.append("</sutdents>");
			return sb.toString();
		}	
	    
//---------------------------------------------------------------------------------------------------------
	    /**
	       * 
	       * @param mapping
	       * @param form
	       * @param request
	       * @param response
	       * @return 显示员工号和姓名
	       */
	    
	    @SuppressWarnings("unchecked")
		public ActionForward suggestStaORName(ActionMapping mapping, ActionForm form,
			   HttpServletRequest request, HttpServletResponse response) {
	    	   Global  gobal=new Global(); 
		    	try{
		    		 String name2=request.getParameter("staffer");
		    		 //byte[] by=name.getBytes("ISO8859-1"); //转换成中文
		    		// String  temp=new  String(by,"gb2312");
		    		 
		    		 List list=gobal.SuggestEmployee(name2);
		    		 response.setContentType("text/html;charset=utf-8");
			    	 PrintWriter out=response.getWriter();
			    	 out.print(parasToXmlStaOrName(list));	 
		    	}catch(Exception e){
		    		log.error("==显示员工号和姓名==",e);
		    	}
			    return null;
		}
	    // div显示的时候是员工号和姓名
	    public String parasToXmlStaOrName(List list){
			StringBuffer sb=new StringBuffer();
			sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>");
			sb.append("<sutdents>");
			for(int i=0;i<list.size();i++){
				 SuggestEmployeeVO vo=(SuggestEmployeeVO)list.get(i);
			     sb.append("<student>");
			     sb.append("<name2>"+vo.getStafferid()+'_'+vo.getUsername()+"</name2>");
			     sb.append("</student>");
			}
			sb.append("</sutdents>");
			return sb.toString();
		}	

//	  ---------------------------------------------------------------------------------------------------------	    
	    /**
	       * 
	       * @param mapping
	       * @param form
	       * @param request
	       * @param response
	       * @return 显示分站号和分站名（简称）
	       */
	    
	    public ActionForward suggestCardreader(ActionMapping mapping, ActionForm form,
				   HttpServletRequest request, HttpServletResponse response) {
		    	   Global  gobal=new Global(); 
			    	try{
			    		 String name=request.getParameter("name");
			    		// byte[] by=name.getBytes("ISO8859-1"); //转换成中文
			    		// String  temp=new  String(by,"gb2312");
			    		 List list=gobal.SuggestCardreader(name);
			    		 response.setContentType("text/xml");
				    	 PrintWriter out=response.getWriter();
				    	 out.print(parasToXmlCardreader(list));	 
			    	}catch(Exception e){
			    		log.error("==显示分站号和分站名（简称）==",e);
			    	}
				    return null;
			}
		    // div显示的时候是分站号和分站名（简称）
		    public String parasToXmlCardreader(List list){
				StringBuffer sb=new StringBuffer();
				sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>");
				sb.append("<sutdents>");
				for(int i=0;i<list.size();i++){
					 SuggestEmployeeVO vo=(SuggestEmployeeVO)list.get(i);
				     sb.append("<student>");
				     sb.append("<name3>"+vo.getCardreaderid()+'_'+vo.getShortname()+"</name3>");
				     sb.append("</student>");
				}
				sb.append("</sutdents>");
				return sb.toString();
			}	

//  ---------------------------------------------------------------------------------------------------------	    
			    /**
			       * 
			       * @param mapping
			       * @param form
			       * @param request
			       * @param response
			       * @return 显示定位器号和定位器（简称）
			       */
			    
			    public ActionForward suggestLocator(ActionMapping mapping, ActionForm form,
						   HttpServletRequest request, HttpServletResponse response) {
				    	   Global  gobal=new Global(); 
					    	try{
					    		 String name=request.getParameter("name");
					    		 //byte[] by=name.getBytes("ISO8859-1"); //转换成中文
					    		 //String  temp=new  String(by,"gb2312");
					    		 List list=gobal.SuggestLocator(name);
					    		 response.setContentType("text/xml");
						    	 PrintWriter out=response.getWriter();
						    	 out.print(parasToXmlLocator(list));	 
					    	}catch(Exception e){
					    		log.error("==显示定位器号和定位器（简称==",e);
					    	}
						    return null;
					}
				    // div显示的时候是定位器号和定位器名（简称）
				    public String parasToXmlLocator(List list){
						StringBuffer sb=new StringBuffer();
						sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\" ?>");
						sb.append("<sutdents>");
						for(int i=0;i<list.size();i++){
							 SuggestEmployeeVO vo=(SuggestEmployeeVO)list.get(i);
						     sb.append("<student>");
						     sb.append("<name4>"+vo.getLocatorid()+'_'+vo.getLshortname()+"</name4>");
						     sb.append("</student>");
						}
						sb.append("</sutdents>");
						return sb.toString();
					}	
		    
}