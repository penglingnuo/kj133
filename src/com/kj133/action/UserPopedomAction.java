/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.kj133.action;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.action.DynaActionForm;
import org.apache.struts.actions.DispatchAction;

import com.kj133.entity.Ouser;
import com.kj133.entity.Search_Popedom;
import com.kj133.entity.UserPopedom;
import com.kj133.entity.bo.UserPopedomBO;
import com.kj133.entity.vo.UserPopedomVO;

/**
 * MyEclipse Struts Creation date: 09-07-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action validate="true"
 */
public class UserPopedomAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	private final Logger log = Logger.getLogger(this.getClass());

	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DynaActionForm dy = (DynaActionForm) form;
		try {
			String uid = request.getParameter("uid");

			String query = request.getParameter("query");
			UserPopedomBO bo = new UserPopedomBO();
			
			if (query == null) {
				List list = bo.init();
				request.setAttribute("userList", list);
				return mapping.findForward("init");
			} else {
				Search_Popedom pope = (Search_Popedom) dy.get("search_popedom");
				String[] str = new String[70];
				for (int i = 0; i < str.length; i++) {
					str[i] = String.valueOf(i + 1);
				}
				pope.setCheck_pope(str);
				request.setAttribute("uid", uid);
				return mapping.findForward("addPopedom");
			}
		} catch (Exception e) {
			log.error("------", e);
		}
		return null;
	}

	@SuppressWarnings("unchecked")
	public ActionForward showPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		Ouser user = (Ouser) request.getSession().getAttribute("user");
		String userid = user.getUserid();
		request.setAttribute("userid", userid);
		try {
			
	
			
			//System.out.println("uesrID::::"+request.getSession().getAttribute("userID"));
			UserPopedomBO bo = new UserPopedomBO();
			List list = bo.showPage(userid);
			List a = new ArrayList();
			List b = new ArrayList();
			List c = new ArrayList();
			List d = new ArrayList();
			List e = new ArrayList();
			List f = new ArrayList();
			List g = new ArrayList();
			List h = new ArrayList();
			UserPopedom up = null;
			if (list.size() > 0) {
				for (int i = 0; i < list.size(); i++) {
					UserPopedomVO vo = (UserPopedomVO) list.get(i);
					
					if(vo.getPertain_to() == null) {
						continue;
					}
					
					if (vo.getPertain_to().equals("a")) {
						up = new UserPopedom(vo.getPhref(), vo.getPname());
						a.add(up);
						request.setAttribute("resulta", a);
					}
					if (vo.getPertain_to().equals("g")) {
						up = new UserPopedom(vo.getPhref(), vo.getPname());
						g.add(up);
						request.setAttribute("resultg", g);
					}
					if (vo.getPertain_to().equals("b")) {
						up = new UserPopedom(vo.getPhref(), vo.getPname());
						b.add(up);
						request.setAttribute("resultb", b);
					}
					if (vo.getPertain_to().equals("c")) {
						up = new UserPopedom(vo.getPhref(), vo.getPname());
						c.add(up);
						request.setAttribute("resultc", c);
					}
					if (vo.getPertain_to().equals("d")) {
						up = new UserPopedom(vo.getPhref(), vo.getPname());
						d.add(up);
						request.setAttribute("resultd", d);
					}
					if (vo.getPertain_to().equals("e")) {
						up = new UserPopedom(vo.getPhref(), vo.getPname());
						e.add(up);
						request.setAttribute("resulte", e);
					}
					if (vo.getPertain_to().equals("f")) {
						up = new UserPopedom(vo.getPhref(), vo.getPname());
						f.add(up);
						request.setAttribute("resultf", f);
					}
				
					if (vo.getPertain_to().equals("h")) {
						up = new UserPopedom(vo.getPhref(), vo.getPname());
						h.add(up);
						request.setAttribute("resulth", h);
					}
				}
			}
		} catch (Exception e) {
			log.error("------", e);
		}
		
		return mapping.findForward("showPage");
	}

	public ActionForward addCheck(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DynaActionForm dy = (DynaActionForm) form;
		try {
			UserPopedomBO bo = new UserPopedomBO();
			Search_Popedom pope = (Search_Popedom) dy.get("search_popedom");
			String uid = request.getParameter("uid");
			String[] check = pope.getCheck_pope();
//			 System.out.println("check:"+check.length);
			for (int i = 0; i < check.length; i++) {
				
				bo.savePopedom(uid, check[i]);
			}
		} catch (Exception e) {
			log.error("--- ---", e);
		}
		return mapping.findForward("save");
	}

	public ActionForward updateCheck(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DynaActionForm dy = (DynaActionForm) form;
		UserPopedomBO bo = new UserPopedomBO();
		try {
			String uid = request.getParameter("uid");
			Search_Popedom pope = (Search_Popedom) dy.get("search_popedom");

			String[] check = pope.getCheck_pope();
			bo.deletePopedom(uid);

			for (int i = 0; i < check.length; i++) {
				bo.updatePopedom(uid, check[i]);

			}
		} catch (Exception e) {
			log.error("--- �޸�Ȩ�޴���---", e);
		}
		return mapping.findForward("delete");
	}

	/**
	 * ����Ȩ��
	 */
	public ActionForward loadCheck(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DynaActionForm dy = (DynaActionForm) form;
		UserPopedomBO bo = new UserPopedomBO();
		try {
			String uid = request.getParameter("uid");
			request.setAttribute("uid", uid);
			
			if(uid.equals("sys")){
				ActionMessages messages = new ActionMessages();
				messages.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage(
						"error.sys"));
				saveMessages(request, messages);
				List list = bo.init();
				request.setAttribute("userList", list);
				return mapping.findForward("init");
			}else{
				List list = bo.checkPopedom(uid);
				String[] s = new String[70];
				for (int i = 0; i < list.size(); i++) {
					UserPopedomVO vo = (UserPopedomVO) list.get(i);
					s[i] = String.valueOf(vo.getPid());
				}
				Search_Popedom pope = (Search_Popedom) dy.get("search_popedom");
				pope.setCheck_pope(s);
				
				return mapping.findForward("load");
			}
				
				
		} catch (Exception e) {
			log.error("------", e);
		}
		return null;
	}
}